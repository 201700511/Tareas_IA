from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt
import numpy as np
# data obtenida del MSPS
x = np.asarray([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,
50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,
102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,
142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,18,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,
182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,
222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,
262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,
302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,
342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,
382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,
422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,
462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,
502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,
542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560])[:,np.newaxis]

y = np.asarray([0,1,1,7,7,8,11,15,20,21,24,24,27,31,31,37,40,43,46,52,54,60,69,71,81,86,93,133,143,149,168,177,181,189,263,282,289,292,310,323,389,430,473,485,
552,569,595,616,650,681,715,721,731,769,789,831,888,916,1059,1108,1172,1251,1390,1565,1723,1829,1917,2072,2318,2529,2828,3254,3523,3862,4164,4423,4729,4998,5209,
5508,5706,5986,6165,6430,6841,7238,7524,7842,8185,8549,8980,9198,9612,9708,10011,10566,11284,11835,12649,13135,13391,13809,14589,15367,15718,16755,17426,17998,
18464,19198,20182,21320,22619,23949,24739,25439,26340,27014,28250,29253,30261,31067,31475,32695,33956,34895,35916,37107,37773,38113,39409,40540,41613,42632,43904,
44542,44803,46012,47191,48462,49462,50625,50983,51210,51998,53141,53965,54908,55811,56231,56620,57616,58767,60000,61144,62047,62384,62694,63603,64646,65770,66822,
67765,68096,68438,69590,70672,71813,72878,73627,73854,74020,74833,75557,76238,76908,77349,77538,77684,78505,79398,80078,80772,81397,81650,81906,82361,82604,83335,
84059,84801,85090,85312,86208,86960,87409,88281,89077,89472,89634,90331,91121,91805,92465,93083,93295,93504,94182,94975,95705,96131,96714,96881,96987,97508,98216,
98869,99503,100074,100427,100660,101254,101411,102182,102911,103612,103768,103872,104537,105239,105791,106344,106963,107125,107163,107400,108034,108687,109321,
109851,110066,110148,110913,111575,112279,112843,113392,113552,113678,114366,114966,115605,116297,116932,117123,117209,117798,118398,119062,119472,120114,120275,
120366,121081,121789,122391,123126,123673,123853,123978,124763,125434,126095,126827,127389,127565,127687,128341,129063,129671,130299,130825,130993,131097,131847,
132523,133156,133332,133414,133575,133691,134489,135301,136156,136363,136464,136640,136844,137693,138512,139394,140386,141439,141779,141982,143000,143993,144955,
146087,147099,147407,147659,148756,149772,150766,151990,152942,153287,153516,154555,155603,156735,157491,158292,158686,158824,159503,160171,160854,161522,162166,
162392,162498,163274,164078,164896,165647,166478,166653,166784,167485,168254,168996,169679,170349,170591,170718,171551,172243,172986,173656,174176,174366,174521,
175273,176099,176742,177556,178203,178442,178658,179467,180282,181037,181908,182635,182858,183002,183948,184886,185787,186643,187590,187893,188103,189090,190190,
191231,192209,193147,193495,193685,193983,194473,194839,195119,195322,195537,195719,197070,198397,199907,201163,202489,202910,203141,205138,206931,208480,210442,
212046,212453,212742,214360,215969,217795,219426,220906,221274,221507,222576,224150,225779,227167,227945,228137,228310,229510,230697,231844,233105,234248,234442,
234642,235590,236966,238057,239424,240334,240541,240692,241889,242911,244299,245190,246119,246448,246629,247755,249208,250197,251763,252617,252970,253162,254587,
255876,257282,258607,259970,260507,260814,262374,264184,265941,267739,269517,270031,270304,272012,273519,275210,276681,278183,278675,279004,280838,282838,284815,
287084,288924,289667,290049,290759,293579,296441,298933,301220,302043,302563,305338,308322,311400,314324,317325,318562,319180,322175,325044,327747,330632,333118,
333830,334375,337762,340857,344221,347496,350816,352088,352584,355223,358798,362134,365528,368484,369626,370258,373047,377446,381514,385512,389510,390514,391118,
394423,399041,403399,407615,411782,413091,413848,417671,422321,428147,433390,437970,439304,440058,444975,450150,455263,460017,463753,465059,465799,470277,475548,
479376,484263,486819,487898,488538,492570,497690,500840,505640,509654,510724,511457,515756,519985,521092,525160,528588,529422,530026,533744,537987,542024,545796
])[:,np.newaxis]

plt.scatter(x,y)

# regression transform
poly_degree = 3
polynomial_features = PolynomialFeatures(degree = poly_degree)
x_transform = polynomial_features.fit_transform(x)

# fit the model
model = LinearRegression().fit(x_transform, y)
y_new = model.predict(x_transform)

# calculate rmse and r2
rmse = np.sqrt(mean_squared_error(y, y_new))
r2 = r2_score(y, y_new)
print('RMSE: ', rmse)
print('R2: ', r2)

# prediction
x_new_min = 0.0
x_new_max = 650.0
x_new = np.linspace(x_new_min, x_new_max, 650)
x_new = x_new[:,np.newaxis]
x_new_transform = polynomial_features.fit_transform(x_new)
y_new = model.predict(x_new_transform)

# plot the prediction
plt.plot(x_new, y_new, color='coral', linewidth=3)
plt.grid()
plt.xlim(x_new_min,x_new_max)
plt.ylim(0,700000)
title = 'Degree = {}; RMSE = {}; R2 = {}'.format(poly_degree, round(rmse,2),
round(r2,2))
plt.title("Prediction of Infection of Covid-19 in Guatemala\n " + title,
fontsize=10)
plt.xlabel('x')
plt.ylabel('y')